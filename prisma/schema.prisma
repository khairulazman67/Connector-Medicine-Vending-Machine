// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionHistoryStatus {
  DEBIT //Penambahan stok
  KREDIT //Pengurangan stok
}

model Fasyankes{
  id                  Int         @id @default(autoincrement())
  fasyankesCode       String      @map("fasyankes_code")         @db.VarChar(10)
  name                String      @map("name")                   @db.VarChar(100)
  VendingMachine       VendingMachine[]
}

model VendingMachine {
  id Int                        @id @default(autoincrement())
  name String                   
  idFasyankes Int               @map("fasyankes_id")          
  isPaperlessHospital           Boolean  @default(true) @map("is_paperless_hospital")
  fasyankes  Fasyankes  @relation(fields: [idFasyankes], references: [id]) // Relation field
  Etalase  Etalase[]      
  vendingMachine  TransactionHistory[]
  SetLocation  SetLocation[]
}

model Etalase{
  id Int                          @id @default(autoincrement())
  idVm           Int              @map("id_vm")
  displayCode String              @map("display_code")   @db.VarChar(10)    
  itemCode String                 @map("item_code")      @db.VarChar(10)
  medicineName String             @map("medicine_name")  @db.VarChar(100)
  maxStock Int                    @map("max_stock")       
  stock Int                       @map("stock")     
  vendingMachine  VendingMachine  @relation(fields: [idVm], references: [id]) // Relation field
} 

model TransactionHistory{
  id    Int                       @id @default(autoincrement())
  idVm  Int                       @map("id_vm")
  displayCode String              @map("display_code")
  itemCode String                 @map("itemCode") @db.VarChar(10)
  locationCode String             @map("location_code") @db.VarChar(10)
  firstStock Int                  @map("first_stock")
  lastStock Int                   @map("last_stock")
  note String                     @map("note")
  status TransactionHistoryStatus @map("status")
  vendingMachine  VendingMachine  @relation(fields: [idVm], references: [id]) // Relation field
} 


model SetLocation{
  id    Int                       @id @default(autoincrement())
  idVm  Int                       @map("id_vm") 

  locationCode String             @map("location_code")           @unique
  vendingMachine  VendingMachine  @relation(fields: [idVm], references: [id]) // Relation field
} 

